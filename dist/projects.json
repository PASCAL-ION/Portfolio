[
    {
        "title" : "Optimisation SEO",
        "image" : "../images/LaPanthere.webp",
        "alt" : "Image projet La Panthère",
        "text": "Dans cette mission SEO pour le site La Panthère, j'ai identifié les sections non optimisées, élaboré des stratégies de correction après une analyse détaillée, effectué des ajustements, et réalisé des tests approfondis avec Lighthouse. Les résultats ont confirmé des améliorations significatives, renforçant l'expérience utilisateur et le référencement du site.",
        "githubLink": "https://github.com/PASCAL-ION/La-Panthere",
        "websiteLink": "https://pascal-ion.github.io/La-Panthere/",
        "techStack": ["Lighthouse", "SEO practices"]
    },
    {
        "title" : "API CRUD",
        "image" : "../images/Piquante.webp",
        "alt" : "Image projet Piquante",
        "text": "J'ai créé une API CRUD sécurisée pour un site de critiques de sauces piquantes. Le serveur Node.js avec Express utilise bcrypt pour la sécurité des mots de passe, des middlewares pour gérer les requêtes, et MongoDB avec Mongoose pour stocker les données de manière flexible. L'objectif : une expérience utilisateur fluide et sécurisée avec une gestion efficace des données critiques.",
        "githubLink": "https://github.com/PASCAL-ION/Piquante",
        "websiteLink": "",
        "techStack": ["Node.Js", "MongoDB", "Express", "OWASP"]
    },
    {
        "title" : "ReactJs",
        "image" : "./images/Kasa.webp",
        "alt" : "Image projet Kasa",
        "text": "Pour ce projet j'ai utilisé React pour intégrer la maquette figma d'une application web dynamique, avec une interface utilisateur interactive et fonctionnelle. L'approche Agile et la gestion d'état avec React assurent une expérience utilisateur fluide. Le Responsive Design garantit une adaptabilité à tous les dispositifs.",
        "githubLink": "https://github.com/PASCAL-ION/Kasa",
        "websiteLink": "https://pascal-ion.github.io/Kasa/",
        "techStack": ["ReactRouter", "Styled Components", "Hooks"]
    },
    {
        "title" : "Ecommerce JS",
        "image" : "../images/Kanap.webp",
        "alt" : "Image projet Kanap",
        "text": "Dans le cadre du projet Kanap, j'ai développé la logique essentielle pour le bon fonctionnement du site, en utilisant la méthode fetch pour la gestion des données. J'ai créé une structure HTML dynamique basée sur les produits disponibles sur le backend. La gestion du panier, incluant l'ajout, la suppression et la modification des articles, a été assurée par un script dédié. J'ai utilisé le local storage pour garantir la disponibilité des données du panier entre les pages du site. De plus, des expressions régulières (regex) ont été mises en place pour assurer la sécurité des données dans les formulaires, renforçant ainsi la fiabilité du processus de commande et offrant une expérience utilisateur plus sûre et agréable.",
        "githubLink": "https://github.com/PASCAL-ION/Kanap",
        "websiteLink": "https://pascal-ion.github.io/Kanap/",
        "techStack": ["test", "test", "test"]
    }
]